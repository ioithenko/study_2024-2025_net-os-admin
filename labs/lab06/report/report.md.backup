---
## Front matter
title: "Отчёт по лабораторной работе №6"
subtitle: "Администрирование сетевых подсистем"
author: "Ищенко Ирина НПИбд-02-22"

## Generic otions
lang: ru-RU
toc-title: "Содержание"

## Bibliography
bibliography: bib/cite.bib
csl: pandoc/csl/gost-r-7-0-5-2008-numeric.csl

## Pdf output format
toc: true # Table of contents
toc-depth: 2
lof: true # List of figures
lot: true # List of tables
fontsize: 12pt
linestretch: 1.5
papersize: a4
documentclass: scrreprt
## I18n polyglossia
polyglossia-lang:
  name: russian
  options:
	- spelling=modern
	- babelshorthands=true
polyglossia-otherlangs:
  name: english
## I18n babel
babel-lang: russian
babel-otherlangs: english
## Fonts
mainfont: IBM Plex Serif
romanfont: IBM Plex Serif
sansfont: IBM Plex Sans
monofont: IBM Plex Mono
mathfont: STIX Two Math
mainfontoptions: Ligatures=Common,Ligatures=TeX,Scale=0.94
romanfontoptions: Ligatures=Common,Ligatures=TeX,Scale=0.94
sansfontoptions: Ligatures=Common,Ligatures=TeX,Scale=MatchLowercase,Scale=0.94
monofontoptions: Scale=MatchLowercase,Scale=0.94,FakeStretch=0.9
mathfontoptions:
## Biblatex
biblatex: true
biblio-style: "gost-numeric"
biblatexoptions:
  - parentracker=true
  - backend=biber
  - hyperref=auto
  - language=auto
  - autolang=other*
  - citestyle=gost-numeric
## Pandoc-crossref LaTeX customization
figureTitle: "Рис."
tableTitle: "Таблица"
listingTitle: "Листинг"
lofTitle: "Список иллюстраций"
lotTitle: "Список таблиц"
lolTitle: "Листинги"
## Misc options
indent: true
header-includes:
  - \usepackage{indentfirst}
  - \usepackage{float} # keep figures where there are in the text
  - \floatplacement{figure}{H} # keep figures where there are in the text
---

# Цель работы

Приобретение практических навыков по установке и конфигурированию системы
управления базами данных на примере программного обеспечения MariaDB.

# Выполнение лабораторной работы

Установим необходимые для работы с базами данных пакеты (рис. [-@fig:001]).

![Установка пакетов](image/1.png){#fig:001 width=70%}

Просмотрим конфигурационные файлы mariadb в каталоге /etc/my.cnf.d и в файле
/etc/my.cnf (рис. [-@fig:002]).

![/etc/my.cnf](image/2.png){#fig:002 width=70%}

`[client-server]`  - секция, которая обозначает, что следующие параметры будут применяться как к клиенту, так и к серверу. Использование квадратных скобок указывает на начало нового раздела в конфигурационном файле.
`!includedir /etc/my.cnf.d` - Здесь указывается конкретный путь к директории, из которой будут включены файлы конфигурации. /etc/my.cnf.d — это стандартное место для хранения дополнительных конфигурационных файлов.

Для запуска и включения программного обеспечения mariadb используем (рис. [-@fig:003]).

![Запуск ПО](image/3.png){#fig:003 width=70%}

Убедимся, что mariadb прослушивает порт (рис. [-@fig:004]).

![Прослушивание порта](image/4.png){#fig:004 width=70%}

Запустим скрипт конфигурации безопасности mariadb, используя:
mysql_secure_installation
Установим пароль для пользователя root базы данных, отключим удалённый корневой доступ и удалим тестовую базу данных и любых анонимных пользователей (рис. [-@fig:005]) и (рис. [-@fig:006]).

![Скрипт конфигурирования безопасности](image/5.png){#fig:005 width=70%}

![Скрипт конфигурирования безопасности](image/6.png){#fig:006 width=70%}

Войдем в базу данных с правами администратора базы данных. Просмотрим список команд MySQL, введя `\h`. Из приглашения интерактивной оболочки MariaDB для отображения доступных в настоящее время баз данных введем MySQL-запрос (рис. [-@fig:007]). Базы данных в системе: information_schema, mysql, performance_schema. Выйдем из интерфейса интерактивной оболочки MariaDB.

![Отображение БД](image/7.png){#fig:007 width=70%}

Войдем в базу данных с правами администратора. Просмотрим статус MariaDB (рис. [-@fig:008]).

![Статус](image/8.png){#fig:008 width=70%}

1. mysql Ver 15.1 Distrib 10.5.22-MariaDB, for Linux (x86_64) using EditLine wrapper 
Эта строка сообщает о версии клиента MySQL, который используется для подключения к базе данных. В данном случае это версия 10.5.22 MariaDB, работающая на 64-разрядной версии Linux с использованием обертки EditLine для обработки ввода.

2. Connection id: 11
Здесь указывается идентификатор соединения. Уникальный номер, который помогает отслеживать активные соединения с сервером.

3. Current database: 
Эта строка показывает, что в данный момент не выбрана ни одна база данных. Это может означать, что нужно выполнить команду USE <имя_базы_данных>, чтобы выбрать базу данных для работы.

4. Current user: root@localhost 
Указывает на текущего пользователя, подключенного к серверу. В данном случае это пользователь root, который подключается с локального хоста.

5. ssl: Not in use 
Эта строка говорит о том, что соединение не защищено с помощью SSL (Secure Sockets Layer). Это может быть важным аспектом безопасности, особенно при удаленных подключениях.

6. Current pager: stdout 
Указывает, что вывод команд отображается в стандартный поток (stdout). Это означает, что результаты запросов будут выводиться непосредственно в терминал.

7. Using outfile: " 
Здесь указано, что не задан файл для вывода результатов запросов. Если бы он был задан, то результаты могли бы быть записаны в файл.

8. Using delimiter: ; 
Эта строка показывает, что в качестве разделителя команд используется точка с запятой (;). Это стандартный разделитель для SQL-запросов.

9. Server: MariaDB 
Указывает на то, что сервер базы данных — это MariaDB, которая является ответвлением MySQL.

10. Server version: 10.5.22-MariaDB MariaDB ServerProtocol version: 10 
Здесь указана версия сервера MariaDB и версия протокола сервера, используемая для связи с клиентом.

11. Connection: Localhost via UNIX socket 
Эта строка говорит о том, что соединение осуществляется локально через UNIX-сокет, что обычно быстрее и безопаснее, чем использование TCP/IP.

12. Server characterset: latin1
Указывает на набор символов (charset), используемый сервером — в данном случае это latin1. Это важно для корректного отображения и хранения текстовой информации.

13. Db characterset: latin1 
Эта строка также указывает на набор символов, используемый для текущей базы данных. 

14. Client characterset: utf8 
Указывает на набор символов, используемый клиентом для общения с сервером — в данном случае это utf8, который поддерживает большее количество символов и языков.

15. Conn. characterset: utf8 
Эта строка подтверждает, что набор символов, используемый для текущего соединения, также utf8. Это важно для корректной передачи данных между клиентом и сервером.

16. UNIX socket: /var/Lib/mysql/mysql.sock 
Здесь указан путь к файлу сокета UNIX, который используется для соединения с сервером базы данных. Это стандартное место для хранения сокетов в некоторых дистрибутивах Linux.

В каталоге /etc/my.cnf.d создадим файл utf8.cnf. Заполним конфигурацию (рис. [-@fig:009]):

![Отображение БД](image/9.png){#fig:009 width=70%}

Перезапустим MariaDB. Войдем в базу данных с правами администратора и посмотрим статус MariaDB (рис. [-@fig:0010]). Были изменены наборы символов, используемых сервером и текущей БД на utf8.

![Статус](image/10.png){#fig:0010 width=70%}

Войдем в базу данных с правами администратора. Создадим базу данных с именем addressbook. Перейдем к базе данных addressbook. Отобразим имеющиеся в базе данных addressbook таблицы. Создадим таблицу city с полями name и city. Заполним несколько строк таблицы некоторыми данными (рис. [-@fig:0011]).

![Создание и заполнение таблицы](image/11.png){#fig:0011 width=70%}

Сделаем MySQL-запрос: SELECT * FROM city; Выводятся все данные, содержащиеся в таблице city  (рис. [-@fig:0012]).

![Вывод таблицы](image/12.png){#fig:0012 width=70%}

Создадим пользователя для работы с базой данных addressbook и зададим для него пароль. Предоставим права доступа созданному пользователю на действия с базой данных addressbook (просмотр, добавление, обновление, удаление данных) Обновим привилегии (права доступа) базы данных addressbook. Посмотрим общую информацию о таблице city базы данных addressbook  (рис. [-@fig:0013]). Выйдем из окружения.

![Создание пользователя, права доступа](image/13.png){#fig:0013 width=70%}

Просмотрим список баз данных  (рис. [-@fig:0014]).

![Список БД](image/15.png){#fig:0014 width=70%}

Просмотрим список таблиц базы данных addressbook  (рис. [-@fig:0015]).

![Список таблиц БД](image/16.png){#fig:0015 width=70%}

Создадим каталог для резервных копий /var/backup. Сделаем резервную копию базы данных addressbook, сжатую резервную копию базы данных addressbook (рис. [-@fig:0016]), сжатую резервную копию базы данных addressbook с указанием даты создания копии (рис. [-@fig:0018]):

![Копии БД](image/17.png){#fig:0016 width=70%}

![Копия БД с датой](image/18.png){#fig:0017 width=70%}

Восстановим базу данных addressbook из сжатой резервной копии (рис. [-@fig:0018]).

![Восстановление БД](image/19.png){#fig:0018 width=70%}

Внесем изменения в настройки внутреннего окружения ВМ (рис. [-@fig:0019]).

![Настройки внутреннего окружения](image/20.png){#fig:0019 width=70%}

Добавим скрипт mysql.sh (рис. [-@fig:0020]).

![mysql.sh](image/21.png){#fig:0020 width=70%}

Внесем изменения в Vagrantfile (рис. [-@fig:0021]).

![Vagrantfile](image/22.png){#fig:0021 width=70%}

# Выводы

В ходе лабораторной работы я приобрела практических навыков по установке и конфигурированию системы управления базами данных на примере программного обеспечения MariaDB.

# Контрольные вопросы

1. Какая команда отвечает за настройки безопасности в MariaDB? 

Настройки безопасности в MariaDB обычно управляются с помощью команды mysql_secure_installation. Эта команда выполняет несколько шагов, включая установку пароля для пользователя root, удаление анонимных учетных записей, отключение удаленного входа для пользователя root и удаление тестовых баз данных.

2. Как настроить MariaDB для доступа через сеть? 

Для настройки MariaDB для доступа через сеть, вы можете отредактировать файл конфигурации MariaDB (обычно называемый my.cnf) и убедиться, что параметр bind-address установлен на IP-адрес,
доступный в вашей сети. Также, убедитесь, что пользователь имеет права доступа извне, например, с использованием команды GRANT.

3. Какая команда позволяет получить обзор доступных баз данных после входа в среду оболочки MariaDB? 

`SHOW DATABASES;`

4. Какая команда позволяет узнать, какие таблицы доступны в базе
данных? 

`SHOW TABLES;`

5. Какая команда позволяет узнать, какие поля доступны в таблице? -

`DESCRIBE table_name;`

6. Какая команда позволяет узнать, какие записи доступны в таблице?

`SELECT * FROM table_name;`

7. Как удалить запись из таблицы? 

`DELETE FROM table_name WHERE condition;`, где `condition` - условие, определяющее, какие
записи следует удалить.

8. Где расположены файлы конфигурации MariaDB? Что можно настроить с их помощью? 

Файлы конфигурации MariaDB обычно располагаются в различных местах в зависимости от
системы, но основной файл - my.cnf. Он может быть в /etc/my.cnf, /etc/mysql/my.cnf или /usr/etc/my.cnf. С помощью этих файлов можно настроить различные параметры, такие как порт, пути к файлам данных, параметры безопасности и другие.

9. Где располагаются файлы с базами данных MariaDB? 

Файлы с базами данных MariaDB располагаются в директории данных. Обычно это /var/lib/mysql/ на Linux-системах.

10. Как сделать резервную копию базы данных и затем её восстановить? 

Для создания резервной копии базы данных используйте команду mysqldump. Например, `mysqldump -u username -p dbname > backup.sql`. Для восстановления базы данных из резервной копии используйте команду `mysql -u username -p dbname < backup.sql`.

